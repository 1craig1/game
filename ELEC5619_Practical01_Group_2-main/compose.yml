
# You should know that Docker Compose works with services.
# 1 service = 1 container.
# For example, a service, a server, a client, a database...
# We use the keyword 'services' to start to create services.
services:
  # The name of our service is "database"
  # but you can use the name of your choice.
  # Note: This may change the commands you are going to use a little bit.
  database:
    # Official Postgres image from DockerHub (we use version 17)
    image: 'postgres:17'

    # By default, a Postgres database is running on the 5432 port.
    # If we want to access the database from our computer (outside the container),
    # we must share the port with our computer's port.
    # The syntax is [port we want on our machine]:[port we want to retrieve in the container]
    # Note: You are free to change your computer's port,
    # but take into consideration that it will change the way
    # you are connecting to your database.
    ports:
      - 15432:5432
    env_file:
      - .env
    networks:
      - postgres-network
    volumes:
    # Named volume for database data
      - db-data:/var/lib/postgresql/data/
    
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 15433:80
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - postgres-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin/

networks: 
  postgres-network:
    driver: bridge

# Define the named volumes used by our services
volumes:
  db-data:
  pgadmin-data:  